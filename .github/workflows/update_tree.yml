name: Upload directory tree

on:
  push:
    branches:
      - dev
  workflow_dispatch:


jobs:
  update-project-tree:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 3: Generate project tree in Markdown
    - name: Generate project tree
      run: |
        mkdir -p artifacts
        python scripts/generate_tree.py
        mv data/project_tree.md artifacts/project_tree.md

    - name: Install Pandoc
      run:
        if ! command -v pandoc &> /dev/null; then
          echo "Pandoc not found. Installing..."
          sudo apt-get update
          sudo apt-get install -y pandoc
        else
        echo "Pandoc is already installed. Skipping installation."
        fi
    # Step 4: Convert Markdown to HTML
    - name: Convert Markdown to HTML
      run: |
        pandoc -f markdown -t html artifacts/project_tree.md -o artifacts/project_tree.html

    # Step 5: Upload HTML content to Confluence
    - name: Upload project tree to Confluence
      run: |
        # Read HTML content
        FILE_PATH="artifacts/project_tree.html"
        CONTENT=$(cat $FILE_PATH | jq -R -s '.')      
        
        # Mostrar la longitud del contenido para depuraci√≥n
        echo "Content Length: ${#CONTENT}"
        echo "${{ vars.SITE_URL}}/wiki/api/v2/pages/22184038"

        # Upload to Confluence using API
        curl --request PUT \
          --url "https://fjgonzalez25691.atlassian.net//wiki/api/v2/pages/22184038" \
          --user "fjgonzalez25691@gmail.com:${{ secrets.CONFLUENCE2_API_TOKEN }}" \
          --header 'Content-Type: application/json' \
          --data-raw "{
            \"version\": { \"number\": 2 },
            \"title\": \"Project Tree\",
            \"body\": {
              \"storage\": {
                \"value\": $CONTENT,
                \"representation\": \"storage\"
              }
            }
        }"

          